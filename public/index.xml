<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>AIMIXSAKA</title><link>/</link><description>AIMIXSAKA</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aimixsaka@gmail.com (aimixsaka)</managingEditor><webMaster>aimixsaka@gmail.com (aimixsaka)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 09 Oct 2023 12:49:31 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>/hello/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/hello/</guid><description>Hello World ?</description></item><item><title/><link>/nix-pills-1/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-1/</guid><description>1 可变和不可变之间的优缺 用hash能很方便同一软件多版本的共存。传统FHS无法很自然地做到这点 更新库时，由于nix硬编码了依赖路径，所有依赖</description></item><item><title/><link>/nix-pills-10/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-10/</guid><description>1 override pattern 前面我们利用函数参数，通过改变调用时传入的参数，来获取一个包的不同变种 但是那仍然有些坏处，比如需要包的维护者手动调用来传参，如果包的可</description></item><item><title/><link>/nix-pills-11/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-11/</guid><description>1 overriding packages咕咕咕</description></item><item><title/><link>/nix-pills-12/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-12/</guid><description><![CDATA[1 nix store paths 来看一下Nix的hash部分如何求值 先以单个文件为例 $ echo mycontent &gt; myfile 1 2 nix-repl&gt; derivation { system = &#34;x86_64-linux&#34;; builder = ./myfile; name = &#34;foo&#34;; } «derivation /nix/stor]]></description></item><item><title/><link>/nix-pills-13/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-13/</guid><description>1 stdenv stdenv 是我们打包中最常用到的工具，nixpgks中绝大多数包都是用stdenv.mkDerivation打的 stdenv 只是一个普通的derivati</description></item><item><title/><link>/nix-pills-2/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-2/</guid><description>1 derivation 用builtins.derivation来创建derivation 以Nix language的角度来看，一个derivation只是一个含</description></item><item><title/><link>/nix-pills-3/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-3/</guid><description>1 working derivation 为了让derivation两个阶段成功运行，除了必要的三个元素，还需要out path存在 为了构建out path，使用bash脚本来进行</description></item><item><title/><link>/nix-pills-4/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-4/</guid><description>1 generic builder 前面我们构建了两个简单的derivation。每个derivation含有两个部分： 描述构建过程，作为builder的参数的build</description></item><item><title/><link>/nix-pills-5/</link><pubDate>Mon, 09 Oct 2023 12:49:31 +0800</pubDate><author><name>aimixsaka</name></author><guid>/nix-pills-5/</guid><description>1 automatic runtime 分析构建时依赖和运行时依赖 build dependency nix-instantiate hellov2.nix /nix/store/3g7ccvlxrpmb2s9m4vkasz8y6444fwsc-hello.drv nix-store -q --references /nix/store/3g7ccvlxrpmb2s9m4vkasz8y6444fwsc-hello.drv /nix/store/3077wznnjrbd318k17j7fjsgxy9xgrcl-gnutar-1.35.drv /nix/store/3mdqlcjhflm8mdm2192bap27g8zv60sq-generic-builder.sh /nix/store/982f8csn028v499k0fkrl66x28cbj3b8-bash-5.2-p15.drv /nix/store/dxsdysn7gpyjajiqjvab03bilarjjn15-coreutils-9.3.drv /nix/store/f7glbcn7n59k22b911bx1vyy13g4bdxh-binutils-2.40.drv /nix/store/fimilhby9fyqbfwmw826id3hwfhya6qx-hello-2.12.1.tar.gz /nix/store/fis965lcaxlhxsibjqr7g99l074niraj-gnumake-4.4.1.drv /nix/store/jhkn3namnqqkl7hmxmcml0ffir0dv774-gnugrep-3.11.drv /nix/store/n20wzc7mdmdq91vq5b6gklsz1171k82r-gnused-4.9.drv /nix/store/w1nk39ahhnzkj9yqa5vpggxgff11056g-gawk-5.2.2.drv /nix/store/w3f8imf2csiwc7jfinmgf682rvhg7fna-gcc-wrapper-12.3.0.drv /nix/store/zq7wlgpchcp0857swj8jv5hdwk0pzlg7-gzip-1.12.drv runtime dependency derivation的运行时依赖是由Nix自动识别的 把deri</description></item></channel></rss>